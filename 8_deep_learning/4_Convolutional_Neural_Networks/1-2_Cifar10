{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMWtxwBEcCSkV1+pMnDB6eI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import tensorflow as tf\n","import numpy as np\n","import matplotlib.pyplot as plt\n","tf.__version__"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"a-piED1hXdVn","executionInfo":{"status":"ok","timestamp":1735308746635,"user_tz":-60,"elapsed":247,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}},"outputId":"f7b71640-2f21-46db-fe54-fb67fdc774a0"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'2.17.1'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["Using tf.keras.utils.get_file load the image files into your storage with this link https://full-stack-assets.s3.eu-west-3.amazonaws.com/datasets/M08/cifar-10/train.zip\n","#"],"metadata":{"id":"pZS-uwa6XsIs"}},{"cell_type":"code","source":["tf.keras.utils.get_file(\"/content/cifar10.zip\",\n","                        origin=\"https://full-stack-assets.s3.eu-west-3.amazonaws.com/datasets/M08/cifar-10/train.zip\",\n","                        extract=True,\n","                        cache_subdir='/content')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"FKMouE9NXn5v","executionInfo":{"status":"ok","timestamp":1735308756525,"user_tz":-60,"elapsed":9634,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}},"outputId":"699ac6b0-ebdc-46f5-e7f6-2c4b890e52b4"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content/cifar10.zip'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["Import the dataframe containing the labels from this link https://full-stack-assets.s3.eu-west-3.amazonaws.com/datasets/M08/cifar-10/trainLabels.csv"],"metadata":{"id":"sQpiWRhfYJft"}},{"cell_type":"code","source":["import pandas as pd\n","data = pd.read_csv(\"https://full-stack-assets.s3.eu-west-3.amazonaws.com/datasets/M08/cifar-10/trainLabels.csv\")\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"bdXoTbajYGdX","executionInfo":{"status":"ok","timestamp":1735308757391,"user_tz":-60,"elapsed":870,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}},"outputId":"aacafdcd-bfd3-4795-f0c7-6e43979e4b21"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id       label\n","0   1        frog\n","1   2       truck\n","2   3       truck\n","3   4        deer\n","4   5  automobile"],"text/html":["\n","  <div id=\"df-1672b0e0-05e5-465e-b195-40e23bcd3b22\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>frog</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>truck</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>truck</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>deer</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>automobile</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1672b0e0-05e5-465e-b195-40e23bcd3b22')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1672b0e0-05e5-465e-b195-40e23bcd3b22 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1672b0e0-05e5-465e-b195-40e23bcd3b22');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fec318d0-c52b-4a35-9afe-a684fb438b10\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fec318d0-c52b-4a35-9afe-a684fb438b10')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fec318d0-c52b-4a35-9afe-a684fb438b10 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14433,\n        \"min\": 1,\n        \"max\": 50000,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          33554,\n          9428,\n          200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"dog\",\n          \"truck\",\n          \"horse\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["Turn the id column into string type and add .png at the end of each string for the filenames to be complete"],"metadata":{"id":"Kw1NApEkYkqA"}},{"cell_type":"code","source":["data['id'] = data['id'].astype('str') + '.png'\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"up0jsO2pYYcZ","executionInfo":{"status":"ok","timestamp":1735308757392,"user_tz":-60,"elapsed":5,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}},"outputId":"b57cfc66-c62d-4d87-d8d0-b57ae3916aef"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id       label\n","0  1.png        frog\n","1  2.png       truck\n","2  3.png       truck\n","3  4.png        deer\n","4  5.png  automobile"],"text/html":["\n","  <div id=\"df-4533b847-c6c7-403f-9aa7-ab753af8673e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.png</td>\n","      <td>frog</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.png</td>\n","      <td>truck</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.png</td>\n","      <td>truck</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.png</td>\n","      <td>deer</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.png</td>\n","      <td>automobile</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4533b847-c6c7-403f-9aa7-ab753af8673e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4533b847-c6c7-403f-9aa7-ab753af8673e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4533b847-c6c7-403f-9aa7-ab753af8673e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-429a45cf-8ac9-4119-aee3-8159a691036a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-429a45cf-8ac9-4119-aee3-8159a691036a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-429a45cf-8ac9-4119-aee3-8159a691036a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          \"33554.png\",\n          \"9428.png\",\n          \"200.png\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"dog\",\n          \"truck\",\n          \"horse\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["Load and display an image of your dataset"],"metadata":{"id":"58P0fQXwY4xh"}},{"cell_type":"code","source":["img = tf.io.read_file('/content/train/1.png')\n","img = tf.image.decode_png(img, channels=3)\n","plt.imshow(img)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"FNGTijqmYw3C","executionInfo":{"status":"ok","timestamp":1735308757870,"user_tz":-60,"elapsed":482,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}},"outputId":"f517ffef-5816-4a46-8869-f664f6674efa"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7cba750d4730>"]},"metadata":{},"execution_count":25},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["View a random image of each of your labels in your dataset"],"metadata":{"id":"0izmo07bZPdM"}},{"cell_type":"code","source":["# Filtrer une image par label unique\n","data_per_label = data.drop_duplicates(subset=\"label\", keep=\"first\")\n","\n","# Définir une figure avec 5 lignes et 2 colonnes\n","fig, axes = plt.subplots(nrows=5, ncols=2, figsize=(10, 25))\n","\n","# Parcourir les axes et les données\n","for idx, (ax, (_, row)) in enumerate(zip(axes.flatten(), data_per_label.iterrows())):\n","    filename = f\"/content/train/{row['id']}\"  # Construire le chemin complet de l'image\n","    img = tf.io.read_file(filename)          # Lire l'image\n","    img = tf.image.decode_png(img, channels=3)  # Décoder en RGB\n","    ax.imshow(img)                           # Afficher l'image\n","    ax.set_title(row['label'])               # Ajouter le titre correspondant au label\n","    ax.axis(\"off\")                           # Supprimer les axes pour une meilleure lisibilité\n","\n","# Ajuster les espacements entre les sous-graphiques\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"2f8CPPUzZLMu","executionInfo":{"status":"ok","timestamp":1735308759284,"user_tz":-60,"elapsed":1416,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}},"outputId":"aba44954-b649-4be2-91ab-5cc14aafd841"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x2500 with 10 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Define an instance of an ImageDataGenerator Class with the data augmentation parameters of your choice, and validation_split=0.3"],"metadata":{"id":"OW2bnxUbaH6y"}},{"cell_type":"code","source":["from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","img_generator = ImageDataGenerator(\n","    rotation_range=0, # Angle range for random image rotation\n","    width_shift_range=0.0, # Random shift of the image along width axis\n","    height_shift_range=0.0, # Random shift of the image along height axis\n","    brightness_range=(0.5,1), # Random brightness modification\n","    shear_range=0.0, # Random distortion of the image\n","    zoom_range=0.0, # Random zoom on the image\n","    channel_shift_range=50.0, # Random hue modification\n","    horizontal_flip=True, # Randomly flips image horizontally\n","    vertical_flip=True, # Randomly flips image virtically\n","    rescale=1/255., # Rescaling values from [0,255]->[0,1]\n","    fill_mode='wrap',\n","    validation_split=0.3 # Portion of the data that can be saved for validation\n",")"],"metadata":{"id":"f6sCugG7aBhB","executionInfo":{"status":"ok","timestamp":1735308759284,"user_tz":-60,"elapsed":5,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}}},"execution_count":27,"outputs":[]},{"cell_type":"markdown","source":["Set up one generator for the train data and one for the test data using the method that lets you generate data with a dataframe. Since we have many images in this dataset, we will create large batches of 64 images. Use a target size of (32,32) and class_mode \"sparse\""],"metadata":{"id":"FgUW2fl3a2MO"}},{"cell_type":"code","source":["train_generator = img_generator.flow_from_dataframe(\n","    dataframe=data,\n","    directory = '/content/train',\n","    x_col='id',\n","    y_col='label',\n","    target_size=(32,32),\n","    class_mode = 'sparse',\n","    batch_size='64',\n","    shuffle = True,\n","    subset = 'training'\n",")\n","\n","val_generator = img_generator.flow_from_dataframe(\n","    dataframe=data,\n","    directory = '/content/train',\n","    x_col='id',\n","    y_col='label',\n","    target_size=(32,32),\n","    class_mode = 'sparse',\n","    batch_size='64',\n","    shuffle = True,\n","    subset = 'validation'\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6vZ7JuQmagR7","executionInfo":{"status":"ok","timestamp":1735308759790,"user_tz":-60,"elapsed":510,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}},"outputId":"6dc62c77-e95d-4408-b73d-ae5eb6963217"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 35000 validated image filenames belonging to 10 classes.\n","Found 15000 validated image filenames belonging to 10 classes.\n"]}]},{"cell_type":"markdown","source":["Display a batch of data of train data"],"metadata":{"id":"tI99Vtdgb4vd"}},{"cell_type":"code","source":["imgs, targets = next(iter(train_generator))\n","fig, ax = plt.subplots(16,4, figsize=(10,40))\n","for i, (img, target) in enumerate(zip(imgs, targets)):\n","  ax[i-16*(i//16),i//16].imshow(img)\n","  ax[i-16*(i//16),i//16].title.set_text(str(target))\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":365},"id":"WUGqxGedb2Ol","executionInfo":{"status":"error","timestamp":1735308759790,"user_tz":-60,"elapsed":11,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}},"outputId":"ec151cd9-7936-4b92-bdbe-20129211a32d"},"execution_count":29,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"not all arguments converted during string formatting","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-29-8d7ba26222d6>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mimgs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtargets\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_generator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m40\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtarget\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimgs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtargets\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m   \u001b[0max\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m//\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m//\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m   \u001b[0max\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m//\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m//\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtarget\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/legacy/preprocessing/image.py\u001b[0m in \u001b[0;36m__next__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    107\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__next__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    108\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlock\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 109\u001b[0;31m             \u001b[0mindex_array\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex_generator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    110\u001b[0m         \u001b[0;31m# The transformation of images is not under thread lock\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    111\u001b[0m         \u001b[0;31m# so it can be done in parallel\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/legacy/preprocessing/image.py\u001b[0m in \u001b[0;36m_flow_index\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     90\u001b[0m                 \u001b[0mcurrent_index\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     91\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 92\u001b[0;31m                 \u001b[0mcurrent_index\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbatch_index\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     93\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0mcurrent_index\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     94\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbatch_index\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: not all arguments converted during string formatting"]}]},{"cell_type":"code","source":["print(train_generator.samples)  # Nombre d'échantillons dans le générateur\n","print(train_generator.class_indices)  # Vérifiez les classes disponibles"],"metadata":{"id":"Y357o_v-cC88","executionInfo":{"status":"aborted","timestamp":1735308759790,"user_tz":-60,"elapsed":10,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Obtenez un lot d'images et de labels\n","imgs, targets = next(train_generator)\n","\n","# Vérifiez les dimensions des images et labels\n","print(f\"Shape des images : {imgs.shape}\")  # Par exemple : (batch_size, height, width, channels)\n","print(f\"Shape des labels : {targets.shape}\")  # Par exemple : (batch_size,)\n","\n","# Affichez quelques images et leurs labels\n","fig, axes = plt.subplots(4, 4, figsize=(12, 12))  # Grille de 4x4\n","for i, ax in enumerate(axes.flatten()):\n","    ax.imshow(imgs[i])  # Affichez l'image\n","    label = list(train_generator.class_indices.keys())[int(targets[i])]  # Convertissez l'index en label\n","    ax.set_title(label)  # Ajoutez le label comme titre\n","    ax.axis(\"off\")  # Supprimez les axes pour une meilleure lisibilité\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"CPxGlEzAcuDS","executionInfo":{"status":"aborted","timestamp":1735308759790,"user_tz":-60,"elapsed":10,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"Nombre d'échantillons : {train_generator.samples}\")  # Total des échantillons\n","print(f\"Classes : {train_generator.class_indices}\")  # Mapping des classes\n","print(f\"Batch size : {train_generator.batch_size}\")  # Taille du lot"],"metadata":{"id":"IkZVZ70Dc9qV","executionInfo":{"status":"aborted","timestamp":1735308759790,"user_tz":-60,"elapsed":10,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_generator.reset()\n","imgs, targets = next(train_generator)  # Obtenez un nouveau lot"],"metadata":{"id":"C_Z_SPC9dGrj","executionInfo":{"status":"aborted","timestamp":1735308759790,"user_tz":-60,"elapsed":9,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Réinitialisez le générateur\n","train_generator.reset()\n","\n","# Utilisez une boucle pour récupérer les données\n","try:\n","    for imgs, targets in train_generator:\n","        print(f\"Images shape : {imgs.shape}\")\n","        print(f\"Targets shape : {targets.shape}\")\n","\n","        # Affichage des images et des labels\n","        fig, axes = plt.subplots(4, 4, figsize=(12, 12))\n","        for i, ax in enumerate(axes.flatten()):\n","            ax.imshow(imgs[i])  # Affiche l'image\n","            label = list(train_generator.class_indices.keys())[int(targets[i])]  # Convertit l'index en label\n","            ax.set_title(label)  # Ajoute le titre correspondant au label\n","            ax.axis(\"off\")  # Supprime les axes\n","        plt.tight_layout()\n","        plt.show()\n","        break  # Affiche uniquement le premier lot\n","except StopIteration:\n","    print(\"Erreur : Le générateur est vide ou a atteint sa fin. Vérifiez les données.\")"],"metadata":{"id":"p99cOh03dNhP","executionInfo":{"status":"aborted","timestamp":1735308759790,"user_tz":-60,"elapsed":9,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"D9D_nIKydYsa","executionInfo":{"status":"aborted","timestamp":1735308759790,"user_tz":-60,"elapsed":9,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"5Jwhw3QfdajC","executionInfo":{"status":"aborted","timestamp":1735308759790,"user_tz":-60,"elapsed":9,"user":{"displayName":"marie-sophie chenevier","userId":"01317793668247273219"}}},"execution_count":null,"outputs":[]}]}